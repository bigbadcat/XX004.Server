
登陆流程：
客户端通过中控进行账号验证。(正式运营时，SDK接入也是在中控进行)
最终得到UserID、服务器地址和进入Token。
UserID为String类型
RoleID为Int64类型

--账号验证
1、中控只提供Http服务，在处理服务时直接对数据进行存储，无所谓卡顿。
2、账号验证通过后，若UserID对应的账户不存在，则自动创建。
3、生成进入游戏Token，与UserID和服务器列表一起返回客户端。

--Token登陆游戏器
1、客户端通过服务器地址建立连接。
2、客户端发送登陆请求，附带进入Token。
3、游戏服进行Token验证(Token可以解析出UserID)。
4、不通过则返回失败，通过则创建用户信息并将连接与用户关联，向存储模块请求角色列表。
5、存储模块读取角色列表并返回给服务模块。
6、服务模块更新用户信息，并返回给客户端。

--创建角色流程
1、客户端发送创建请求给登陆服，附带UserID和创建需要的信息(职业、名称等)。
2、服务模块初步判断创建信息合法性。
3、不合法则返回，合法则向存储模块请求创建角色(名称重复、角色数量判断要依赖数据库)。
4、存储模块进一步判断是否可以创建，若可以则保存数据，然后向服务模块返回结果。
5、服务模块判断是否创建成功，若成功则更新用户信息，最后将结果转发客户端。

--选择角色流程
1、客户端发送进入游戏请求，附带RoleID。
2、判断角色是否可进入，若不可直接返回。
3、若可进入则将RoleID与连接关联，通知玩家上线，返回结果。
4、其它模块下发初始化数据，通知角色进场。


退出流程：
退出分为玩家主动退出和掉线退出两种

--主动退出流程(角色成功进入之后)
1、客户端发送退出请求给服务端。
2、收到之后马上回复客户端，客户端退出游戏。
3、服务端登陆模块通知其它模块角色退出，并保存数据。
4、删除玩家信息。

--掉线退出流程
1、服务端检测到连接断开。
2、清除连接，若连接已经关联了RoleID，则将UserID、RoleID和TimeStamp保存。
3、通知其它模块角色掉线。
4、判断TimeStamp，在一定时间内允许玩家重连，不需要再重新登陆即可继续游戏。
5、如果超出则通知其它模块角色退出，并保存数据。
6、删除玩家信息。

断线重连：
1、进入游戏成功后，客户端会得到服务器下发的重连Token，并记录了当前服务器地址。
2、连接断开后，客户端提示连接已断开，并自动尝试进行N次连接。
3、尝试连接期间屏蔽任何操作，并实时显示尝试次数。
4、若尝试N次后无法连接，则提示界面提供操作"再次尝试"(回到3步骤) "返回登陆"(回到登陆场景 -> end)。
5、若连接成功后，则发送Token进行重连。
6、解析Token，解析失败或已经过期则返回客户端重连失败，否则返回成功并通知世界服务刷新玩家数据。
7、客户端收到重连结果。若为失败：提示界面只提供"返回登陆"操作(回到登陆场景 -> end)，若成功则提示正在刷新数据。
8、客户端刷新数据处理。
9、客户端收到刷新数据完毕的回复后关掉提示。










